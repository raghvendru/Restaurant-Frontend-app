pipeline {
  agent any

  tools {
    nodejs "Nodejs"
  }

  environment {
    DOCKER_REGISTRY = "docker.io"
    DOCKERHUB_CREDENTIALS = credentials('DOCKER_HUB_CREDENTIALS')
    VERSION = "${env.BUILD_ID}"
  }

  stages {
    stage('Cleanup Workspace Before Build') {
      steps {
        cleanWs()
        sh 'docker system prune -af || true'
      }
    }

    stage('Checkout') {
      steps {
        // Explicitly checkout the repository
        git branch: 'main',
            url: 'https://github.com/raghvendru/Restaurant-Frontend-app.git'
        
        // Debug: Check what was checked out
        sh '''
          pwd
          ls -la
          echo "===== Repository contents ====="
          ls -R
        '''
      }
    }

    stage('Install Dependencies') {
      steps {
        // Navigate to the correct directory
        dir('food-delivery-app-FE-master') {
          sh '''
            echo "===== Current directory ====="
            pwd
            ls -la
            npm install
          '''
        }
      }
    }

    stage('Build Project') {
      steps {
        dir('food-delivery-app-FE-master') {
          sh 'npm run build'
        }
      }
    }

    stage('Docker Build and Push') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'DOCKER_HUB_CREDENTIALS', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
          
          dir('food-delivery-app-FE-master') {
            sh '''
              echo "node_modules" > .dockerignore
              echo "dist" >> .dockerignore
              
              docker build -t raghuuppar/frontend:${VERSION} --no-cache .
              docker push raghuuppar/frontend:${VERSION}
              docker rmi raghuuppar/frontend:${VERSION} || true
            '''
          }
        }
      }
    }

    stage('Update Image Tag in GitOps') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'github-token', usernameVariable: 'GITHUB_USER', passwordVariable: 'GITHUB_TOKEN')]) {
          sh '''
            git config --global user.email "raghavendruppar@gmail.com"
            git config --global user.name "raghavendru"

            git clone "https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/raghvendru/Restaurant-Service.git"
            cd Restaurant-Service

            sed -i "s|image:.*|image: raghuuppar/frontend:${VERSION}|" deployment-folder/aws/angular-manifest.yml
            git add deployment-folder/aws/angular-manifest.yml
            git commit -m "Update image tag for version ${VERSION}"
            git push origin main
          '''
        }
      }
    }

    stage('Final Cleanup') {
      steps {
        cleanWs()
        sh '''
          docker system prune -af || true
          docker volume prune -f || true
        '''
      }
    }
  }

  post {
    always {
      cleanWs()
    }
  }
}

